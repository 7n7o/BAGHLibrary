local rbxmSuite = (function() local a="rbxm-suite"local b="_rbxm-suite-v2"local c=b.."/temp.dat"local d=game:GetService("HttpService")local e=getcustomasset or getsynasset or error("Failed to load model! (No custom asset loader found)")local function f(g,h)local i=getgenv(g)["__rbxm_suite_"..g]if i==nil then i=h;getgenv(g)["__rbxm_suite_"..g]=i end;return i end;local function j(k,l)if k==nil then return l else return k end end;local function m(n)local o,p=game:HttpGetAsync(n)return assert(o,"Error "..tostring(p)..": Failed to GET from "..n)end;local function q(r,s)if s then print(r)end end;local t;do t={}local function u()if not isfolder(b)then makefolder(b)makefolder(b.."/models")writefile(b.."/latest.json","{}")end end;local function v(w)local x=readfile(b.."/latest.json")local y=d:JSONDecode(x)w(y)writefile(b.."/latest.json",d:JSONEncode(y))end;local function z(A)local x=readfile(b.."/latest.json")local y=d:JSONDecode(x)return y[A]end;local function B(C,D)local o=m("https://api.github.com/repos/"..C.."/"..D.."/releases/latest")return d:JSONDecode(o).tag_name end;local function E(C,D,F,A,G)local H=B(C,D)if isfile(G)and z(A)==H then return G end;local o=m("https://github.com/"..C.."/"..D.."/releases/latest/download/"..F)writefile(G,o)v(function(y)y[A]=H end)end;function t.download(C,D,I,F)local A=string.gsub(table.concat({C,D,I,F},"-"),"[^a-zA-Z0-9_%-]","_")local G=b.."/models/"..A..".rbxm"if I=="latest"then if isfile(G)then task.defer(E,C,D,F,A,G)else E(C,D,F,A,G)end;return G end;if isfile(G)then return G end;local o=m("https://github.com/"..C.."/"..D.."/releases/download/"..I.."/"..F)writefile(G,o)return G end;function t.clearCache()delfolder(b)u()end;u()end;local J=f("modules",{})local K={}local L=f("idToScript",{})local M=f("scriptToId",{})local N=f("globalMap",{})local function O(P,Q,R)local S=J[P]if S.isLoaded then return S.data end;if Q and not R then K[Q]=P;local T=P;local U=0;while T do U=U+1;T=K[T]if T==P then local V=T:GetFullName()for W=1,U do T=K[T]V=V.."  ⇒ "..T:GetFullName()end;error("Failed to load '"..P:GetFullName().."'! Detected a circular dependency chain: "..V,2)end end end;local x=S.fn()if K[Q]==P then K[Q]=nil end;S.data=x;S.isLoaded=true;return x end;local function X()local Y={}local function Z(V)table.insert(Y,V)end;local function _()return table.concat(Y)end;return{push=Z,concat=_}end;local function a0(P,R)local A=d:GenerateGUID()local function a1(a2)if typeof(a2)=="Instance"and J[a2]then return O(a2,P,R)else return require(a2)end end;J[P]={data=nil,fn=nil,isLoaded=false}L[A]=P;M[P]=A;N[A]={P,a1}return A end;local function a3(a4)a4.push("local modules, globalMap, idToScript = ...")end;local function a5(P,a4,a6)if not P:IsA("LocalScript")and not P:IsA("ModuleScript")then return end;local A=string.format("%q",a0(P,not a6.nocirculardeps))local G=string.format("%q","@"..a.."."..P:GetFullName())if a6.debug then P.Source="local script, require = unpack((...)["..A.."]); "..P.Source;a4.push("modules[idToScript["..A.."]].fn = function ()\n".."local fn, err = loadstring(idToScript["..A.."].Source, "..G..")\n".."return assert(fn, err)(globalMap)\n".."end\n")return end;P.Source="local script, require = unpack(globalMap["..A.."]); "..P.Source;a4.push("modules[idToScript["..A.."]].fn = function ()\n"..P.Source.."\nend\n")end;local function a7(n,s)local a8=string.match(n,"^rbxassetid://(%d+)$")if not a8 then return game:GetObjects(n)end;local x=d:JSONDecode(m("https://assetdelivery.roblox.com/v2/assetId/"..a8))local a9=m(x.locations[1].location)if a9==""then q("⚠️ Model data for asset "..a8 .." is blank!",s)return game:GetObjects(n)end;writefile(c,a9)local aa,ab=pcall(function()return game:GetObjects(e(c))end)delfile(c)if not aa then q("⚠️ Model data for asset "..a8 .." failed to load! "..tostring(ab),s)return game:GetObjects(n)end;return ab end;local function ac(n,a6)if string.find(n,"^rbxassetid://")then if a6.nocache then return a7(n,a6.verbose)end;return game:GetObjects(n)else return game:GetObjects(e(n))end end;local function ad(a4,ae,a6)a5(ae,a4,a6)for W,P in ipairs(ae:GetDescendants())do a5(P,a4,a6)end end;local function af(a4)assert(loadstring(a4.concat(),"@"..a))(J,N,L)end;local function ag(P,ah,a6)local ai=a6.deferred and task.defer or task.spawn;ai(function()q("ℹ️ "..ah.." Running "..P:GetFullName(),a6.verbose)O(P)q("✅ "..ah.." Done!",a6.verbose)end)end;local function aj(ae,a6)local ak=0;if ae:IsA("LocalScript")and not ae.Disabled then ak=ak+1;ag(ae,ak,a6)end;for W,P in ipairs(ae:GetDescendants())do if P:IsA("LocalScript")and not P.Disabled then ak=ak+1;ag(P,ak,a6)end end end;local function al(n,am)assert(type(n)=="string","The first argument 'url' must be a string.")assert(type(am)=="table"or am==nil,"The second argument 'options' must be a table or nil.")am=am or{}local a6={runscripts=j(am.runscripts,true),deferred=j(am.deferred,true),nocache=j(am.nocache,false),nocirculardeps=j(am.nocirculardeps,true),debug=j(am.debug,false),verbose=j(am.verbose,false)}q("\n\n"..utf8.char(0x1F680).." Launching file '"..n.."'\n",a6.verbose)local an=os.clock()local ao=ac(n,a6)local a4=X()a3(a4)for W,ae in ipairs(ao)do ad(a4,ae,a6)end;af(a4)if a6.runscripts then for W,ae in ipairs(ao)do aj(ae,a6)end end;q("\n\n"..utf8.char(0x1F389).." Done! Took "..string.format("%.2f",(os.clock()-an)*1000).." milliseconds.\n",a6.verbose)return unpack(ao)end;local function require(P)assert(typeof(P)=="Instance","The script must be an Instance.")assert(P:IsA("LuaSourceContainer"),"The script must be a Lua module or script.")assert(J[P],"The script must be registered with rbxmSuite.")return O(P)end;local function ap(aq,F)local C,D,I=string.match(aq,"([^/]+)/([^@]+)@?(.*)")assert(C and D,"Invalid repository format.")assert(type(F)=="string","The asset must be a string.")if I==""or I==nil then I="latest"end;return t.download(C,D,I,F)end;local function ar()return t.clearCache()end;return{launch=al,require=require,download=ap,clearCache=ar} end)()
return rbxmSuite.launch(rbxmSuite.download("7n7o/BAGHLibrary@latest", "BAGHLibrary.rbxm"))